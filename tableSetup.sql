CREATE TABLE tblUsers(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	username VARCHAR(20) NOT NULL,
	password VARCHAR(128) NOT NULL,
	salt VARCHAR(128) NOT NULL,
	isAdmin TINYINT(1) NOT NULL,
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID)
);

CREATE TABLE tblUserSessions(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	userID INT UNSIGNED NOT NULL,
	hashKey VARCHAR(128) NOT NULL,
	IP VARCHAR(15) NOT NULL,
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	dateExpire DATETIME NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY (userID) REFERENCES tblUsers(ID)
);

CREATE TABLE tblAdventures(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	userID INT UNSIGNED NOT NULL,
	hashKey VARCHAR(128) NOT NULL,
	title VARCHAR(100) NOT NULL,
	description VARCHAR(500) NOT NULL,
	imageID INT UNSIGNED NULL,
	published TINYINT(1) NOT NULL DEFAULT 0,
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID),
	FOREIGN KEY (userID) REFERENCES tblUsers(ID)
);

CREATE TABLE tblScenes(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	adventureID INT UNSIGNED NOT NULL,
	name VARCHAR(50) NULL,
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID),
	FOREIGN KEY (adventureID) REFERENCES tblAdventures(ID)
);

CREATE TABLE tblImages(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	adventureID INT UNSIGNED NOT NULL,
	URL VARCHAR(100) NULL,
	width SMALLINT UNSIGNED NULL,
	height SMALLINT UNSIGNED NULL,
	centerX VARCHAR(10) NOT NULL DEFAULT '50%',
	centerY VARCHAR(10) NOT NULL DEFAULT '50%',
	scale VARCHAR(10) NOT NULL DEFAULT '1',
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID),
	FOREIGN KEY (adventureID) REFERENCES tblAdventures(ID)
);

CREATE TABLE tblEffects(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	adventureID INT UNSIGNED NOT NULL,
	name VARCHAR(50) NULL,
	keyframes VARCHAR(1000) NULL,
	timing VARCHAR(40) NOT NULL DEFAULT 'linear',
	duration TINYINT UNSIGNED NOT NULL DEFAULT 1,
	delay TINYINT UNSIGNED NOT NULL DEFAULT 0,
	loops TINYINT UNSIGNED NOT NULL DEFAULT 0,
	direction VARCHAR(20) NOT NULL DEFAULT 'normal',
	fillMode VARCHAR(20) NOT NULL DEFAULT 'none',
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID),
	FOREIGN KEY (adventureID) REFERENCES tblAdventures(ID)
);

CREATE TABLE tblPageTypes(
	ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(50) NOT NULL,
	style VARCHAR(20) NOT NULL,
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID)
);
INSERT INTO tblPageTypes (name, style) VALUES
('Normal', 'normal'),
('Checkpoint', 'checkpoint'),
('Death', 'death'),
('Bad Ending', 'badEnding'),
('Good Ending', 'goodEnding');

CREATE TABLE tblPages(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	adventureID INT UNSIGNED NOT NULL,
	name VARCHAR(50) NULL,
	text VARCHAR(2000) NULL,
	sceneID INT UNSIGNED NULL,
	pageTypeID TINYINT UNSIGNED NOT NULL DEFAULT 1,
	imageID INT UNSIGNED NULL,
	effectID INT UNSIGNED NULL,	
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID),
	FOREIGN KEY (adventureID) REFERENCES tblAdventures(ID),
	FOREIGN KEY (sceneID) REFERENCES tblScenes(ID),
	FOREIGN KEY (pageTypeID) REFERENCES tblPageTypes(ID),
	FOREIGN KEY (imageID) REFERENCES tblImages(ID),
	FOREIGN KEY (effectID) REFERENCES tblEffects(ID)
);

CREATE TABLE tblTransitions(
	ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(50) NOT NULL,
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID)
);
INSERT INTO tblTransitions (name) VALUES
('None'),
('Fade'),
('Dip to Black'),
('Dip to White'),
('Pan Left'),
('Pan Right'),
('Pan Up'),
('Pan Down');

CREATE TABLE tblActions(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	pageID INT UNSIGNED NULL,
	sceneID INT UNSIGNED NULL,
	text VARCHAR(500) NULL,
	isSpeech TINYINT(1) NOT NULL DEFAULT 0,
	nextPageID INT UNSIGNED NULL,
	effectID INT UNSIGNED NULL,
	transitionID TINYINT UNSIGNED NOT NULL DEFAULT 1,
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID),
	FOREIGN KEY (pageID) REFERENCES tblPages(ID),
	FOREIGN KEY (sceneID) REFERENCES tblScenes(ID),
	FOREIGN KEY (effectID) REFERENCES tblEffects(ID)
);

CREATE TABLE tblFlags(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	adventureID INT UNSIGNED NOT NULL,
	name VARCHAR(50) NULL,
	isItem TINYINT(1) NOT NULL DEFAULT 0,	
	description VARCHAR(200) NOT NULL DEFAULT '',
	imageID INT UNSIGNED NULL,
	isCounter TINYINT(1) NOT NULL DEFAULT 0,
	counterDefault INT NULL,
	counterMinimum INT NULL,
	counterMaximum INT NULL,
	counterWraps TINYINT(1) NOT NULL DEFAULT 0,
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID),
	FOREIGN KEY (adventureID) REFERENCES tblAdventures(ID),
	FOREIGN KEY (imageID) REFERENCES tblImages(ID)
);

CREATE TABLE tblConditions(
	ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(50) NOT NULL,
	involvesFlag TINYINT(1) NOT NULL,
	involvesCounter TINYINT(1) NOT NULL,
	involvesRange TINYINT(1) NOT NULL,
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID)
);
INSERT INTO tblConditions (name, involvesFlag, involvesCounter, involvesRange) VALUES
	('Always Trigger', 0, 0, 0),
	('Flag Active', 1, 0, 0),
	('Flag Inactive', 1, 0, 0),
	('Counter Equals', 1, 1 ,0),
	('Counter Less Than', 1, 1, 0),
	('Counter Less Than or Equals', 1, 1, 0),
	('Counter Greater Than', 1, 1, 0),
	('Counter Greater Than or Equals', 1, 1, 0),
	('Counter Within Range', 1, 1, 1),
	('Counter Out of Range', 1, 1, 1),
	('Random Chance %', 0, 1, 0);

CREATE TABLE tblActionFlagRequirements(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	actionID INT UNSIGNED NOT NULL,
	flagID INT UNSIGNED NULL,
	counterValue INT NULL,
	counterUpperValue INT NULL,
	conditionID TINYINT UNSIGNED NOT NULL DEFAULT 1,
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID),
	FOREIGN KEY (actionID) REFERENCES tblActions(ID),
	FOREIGN KEY (flagID) REFERENCES tblFlags(ID),
	FOREIGN KEY (conditionID) REFERENCES tblConditions(ID)
);

CREATE TABLE tblEventTypes(
	ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(50) NOT NULL,
	involvesFlag TINYINT(1) NOT NULL,
	involvesValue TINYINT(1) NOT NULL,
	involvesPage TINYINT(1) NOT NULL,
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID)
);
INSERT INTO tblEventTypes (name, involvesFlag, involvesValue, involvesPage) VALUES
	('Display Text', 0, 0, 0),
	('Set Flag', 1, 0, 0),
	('Remove Flag', 1, 0, 0),
	('Set Counter', 1, 1, 0),
	('Increment Counter', 1, 1, 0),
	('Jump to Page', 0, 0, 1),
	('Store Current Page', 0, 0, 0),
	('Jump to Stored Page', 0, 0, 0);

CREATE TABLE tblEvents(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	adventureID INT UNSIGNED NOT NULL,
	eventTypeID TINYINT UNSIGNED NOT NULL DEFAULT 1,
	flagID INT UNSIGNED NULL,
	value INT NULL,
	textBefore VARCHAR(200) NULL,
	textAfter VARCHAR(200) NULL,
	pageID INT UNSIGNED NULL,
	conditionID TINYINT UNSIGNED NOT NULL DEFAULT 1,
	conditionFlagID INT UNSIGNED NULL,
	counterValue INT NULL,
	counterUpperValue INT NULL,	
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID),
	FOREIGN KEY (adventureID) REFERENCES tblAdventures(ID),
	FOREIGN KEY (eventTypeID) REFERENCES tblEventTypes(ID),
	FOREIGN KEY (flagID) REFERENCES tblFlags(ID),
	FOREIGN KEY (pageID) REFERENCES tblPages(ID),
	FOREIGN KEY (conditionID) REFERENCES tblConditions(ID),
	FOREIGN KEY (conditionFlagID) REFERENCES tblFlags(ID)
);

CREATE TABLE tblActionEvents(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	actionID INT UNSIGNED NOT NULL,
	eventID INT UNSIGNED NULL,
	priority TINYINT UNSIGNED NOT NULL DEFAULT 0,
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID),
	FOREIGN KEY (actionID) REFERENCES tblActions(ID),
	FOREIGN KEY (eventID) REFERENCES tblEvents(ID)
);

CREATE TABLE tblPageEvents(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	pageID INT UNSIGNED NOT NULL,
	eventID INT UNSIGNED NULL,
	priority TINYINT UNSIGNED NOT NULL DEFAULT 0,
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID),
	FOREIGN KEY (pageID) REFERENCES tblPages(ID),
	FOREIGN KEY (eventID) REFERENCES tblEvents(ID)
);

CREATE TABLE tblSceneEvents(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	sceneID INT UNSIGNED NOT NULL,
	eventID INT UNSIGNED NULL,
	priority TINYINT UNSIGNED NOT NULL DEFAULT 0,
	dateCreated DATETIME NOT NULL DEFAULT NOW(),
	isActive TINYINT(1) NOT NULL DEFAULT 1,
	PRIMARY KEY(ID),
	FOREIGN KEY (sceneID) REFERENCES tblScenes(ID),
	FOREIGN KEY (eventID) REFERENCES tblEvents(ID)
);